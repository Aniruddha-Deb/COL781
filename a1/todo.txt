- [X] bool initialize(const std::string &title, int width, int height, int spp=1);
- [X] bool shouldQuit(); 

    /** Shader programs **/
- [X] ShaderProgram createShaderProgram(const VertexShader &vs, const FragmentShader &fs);
- [X] void useShaderProgram(const ShaderProgram &program);
- [X] template <typename T> void setUniform(ShaderProgram &program, const std::string &name, T value);
- [X] void deleteShaderProgram(ShaderProgram &program);

	/** Objects **/
- [X] Object createObject();
- [X] template <typename T> void setVertexAttribs(Object &object, int attribIndex, int n, const T* data);
- [X] void setTriangleIndices(Object &object, int n, glm::ivec3* indices);

	/** Drawing **/
- [ ] void enableDepthTest();
- [X] void clear(glm::vec4 color);
- [ ] void drawObject(const Object &object);
- [X] void show(); 

	/** Built-in shaders **/
- [X] VertexShader vsIdentity();
- [X] VertexShader vsColor();
- [X] VertexShader vsTransform();
- [X] VertexShader vsColorTransform();
- [X] FragmentShader fsConstant(); 
- [X] FragmentShader fsIdentity(); 
